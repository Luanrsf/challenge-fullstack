[{"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/products/index.tsx":"1","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/login/index.tsx":"2","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/products/styles.ts":"3","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/dashboard/index.tsx":"4","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/routes/index.tsx":"5","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/variants/index.tsx":"6","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/variants/styles.ts":"7","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/dashboard/styles.ts":"8","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/services/api.ts":"9","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/register/index.tsx":"10"},{"size":10226,"mtime":1607987134885,"results":"11","hashOfConfig":"12"},{"size":1837,"mtime":1607987091197,"results":"13","hashOfConfig":"12"},{"size":3219,"mtime":1607986824486,"results":"14","hashOfConfig":"12"},{"size":6072,"mtime":1607987091975,"results":"15","hashOfConfig":"12"},{"size":758,"mtime":1607983933615,"results":"16","hashOfConfig":"12"},{"size":5553,"mtime":1607987607891,"results":"17","hashOfConfig":"12"},{"size":2078,"mtime":1607985757797,"results":"18","hashOfConfig":"12"},{"size":2587,"mtime":1607986511106,"results":"19","hashOfConfig":"12"},{"size":122,"mtime":1607988002414,"results":"20","hashOfConfig":"12"},{"size":2076,"mtime":1607733951883,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1ko6zpp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/products/index.tsx",["44","45","46","47","48","49"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport {\r\n    Container,\r\n    SideBar,\r\n    ContainerProducts,\r\n    IconGroup,\r\n    ContainerVariants,\r\n    RollDiv,\r\n} from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport editIcon from \"../../assets/edit.svg\";\r\nimport deleteIcon from \"../../assets/delete.svg\";\r\n\r\ninterface IVariantsDTO {\r\n    _id: string;\r\n    amount: string;\r\n    name: string;\r\n    picture: string;\r\n    description: string;\r\n    price: string;\r\n}\r\ninterface IProducts {\r\n    _id: string;\r\n    amount: string;\r\n    name: string;\r\n    picture: string;\r\n    description: string;\r\n    price: string;\r\n    variants: IVariantsDTO[];\r\n}\r\n\r\nconst Products: React.FC = () => {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [picture, setPicture] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [variantAmount, setVariantAmount] = useState(\"\");\r\n    const [variantName, setVariantName] = useState(\"\");\r\n    const [variantPicture, setVariantPicture] = useState(\"\");\r\n    const [variantDescription, setVariantDescription] = useState(\"\");\r\n    const [variantPrice, setVariantPrice] = useState(\"\");\r\n    const [variants, setVariants] = useState<IVariantsDTO[]>([]);\r\n    const [product, setProduct] = useState<IProducts>();\r\n\r\n    const history = useHistory();\r\n\r\n    const socket = io(\"http://localhost:3334\", {\r\n        transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n    });\r\n\r\n    const handleUpdateProduct = async (e: { preventDefault: () => void }) => {\r\n        e.preventDefault();\r\n        const product_id = localStorage.getItem(\"@Product:id\");\r\n        const priceConverted = parseInt(price);\r\n        const amountConverted = parseInt(amount);\r\n        socket.emit(\r\n            \"UpdateProduct\",\r\n            {\r\n                amount: amountConverted,\r\n                name,\r\n                picture,\r\n                description,\r\n                price: priceConverted,\r\n            },\r\n            product_id\r\n        );\r\n    };\r\n\r\n    const handleDeleteVariant = (\r\n        id: string,\r\n        e: { preventDefault: () => void }\r\n    ) => {\r\n        const product_id = localStorage.getItem(\"@Product:id\");\r\n        e.preventDefault();\r\n\r\n        socket.emit(\"DeleteVariants\", id, product_id);\r\n    };\r\n\r\n    const handleAddVariant = (e: { preventDefault: () => void }) => {\r\n        e.preventDefault();\r\n        const product_id = localStorage.getItem(\"@Product:id\");\r\n        const priceConverted = parseInt(variantPrice);\r\n        const amountConverted = parseInt(variantAmount);\r\n        socket.emit(\r\n            \"RegisterVariant\",\r\n            {\r\n                amount: amountConverted,\r\n                name: variantName,\r\n                picture: variantPicture,\r\n                description: variantDescription,\r\n                price: priceConverted,\r\n            },\r\n            product_id\r\n        );\r\n    };\r\n    const handleEditVariant = (\r\n        id: string,\r\n        e: { preventDefault: () => void }\r\n    ) => {\r\n        e.preventDefault();\r\n        localStorage.setItem(\"@Variant:id\", id);\r\n        history.push(\"/products/variants\");\r\n    };\r\n    ////\r\n    //inicialização dos items sem ser pelo socket\r\n    ////\r\n\r\n    useEffect(() => {\r\n        const product_id = localStorage.getItem(\"@Product:id\");\r\n        const token = localStorage.getItem(\"@Session:token\");\r\n        const headerAuthenticated = {\r\n            headers: {\r\n                Authorization: `Bearer + ${token}`,\r\n            },\r\n        };\r\n        async function loadRequest() {\r\n            const response = await api.get(\"/products\", headerAuthenticated);\r\n            const productFind = response.data.find(\r\n                (productItem: IProducts) => productItem._id === product_id\r\n            );\r\n\r\n            setProduct(productFind);\r\n            setVariants(productFind.variants);\r\n        }\r\n\r\n        loadRequest();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"GetVariants\", (variants: IVariantsDTO[]) => {\r\n            setVariants(variants);\r\n        });\r\n    }, [, socket]);\r\n    useEffect(() => {\r\n        socket.on(\"GetSingleProduct\", (product: IProducts) => {\r\n            setProduct(product);\r\n            localStorage.setItem(\"@Product:id\", product._id);\r\n        });\r\n    }, [, socket]);\r\n\r\n    return (\r\n        <Container>\r\n            <SideBar>\r\n                <h1>Edite o produto</h1>\r\n                <form onSubmit={(e) => handleUpdateProduct(e)}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Nome do produto\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></input>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"amount\"\r\n                        placeholder=\"Quantidades de unidades\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                    ></input>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"picture\"\r\n                        placeholder=\"Foto do produto\"\r\n                        value={picture}\r\n                        onChange={(e) => setPicture(e.target.value)}\r\n                    ></input>\r\n                    <textarea\r\n                        name=\"description\"\r\n                        placeholder=\"Descrição\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    ></textarea>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        placeholder=\"Preço do produto\"\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    ></input>\r\n                    <button type=\"submit\">Editar Produto</button>\r\n                </form>\r\n                <h1>Adicione uma variante</h1>\r\n                <form onSubmit={handleAddVariant}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Nome do produto\"\r\n                        value={variantName}\r\n                        onChange={(e) => setVariantName(e.target.value)}\r\n                    ></input>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"amount\"\r\n                        placeholder=\"Quantidades de unidades\"\r\n                        value={variantAmount}\r\n                        onChange={(e) => setVariantAmount(e.target.value)}\r\n                    ></input>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"picture\"\r\n                        placeholder=\"Foto do produto\"\r\n                        value={variantPicture}\r\n                        onChange={(e) => setVariantPicture(e.target.value)}\r\n                    ></input>\r\n                    <textarea\r\n                        name=\"description\"\r\n                        placeholder=\"Descrição\"\r\n                        value={variantDescription}\r\n                        onChange={(e) => setVariantDescription(e.target.value)}\r\n                    ></textarea>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        placeholder=\"Preço do produto\"\r\n                        value={variantPrice}\r\n                        onChange={(e) => setVariantPrice(e.target.value)}\r\n                    ></input>\r\n                    <button type=\"submit\">Adicionar Variante</button>\r\n                </form>\r\n            </SideBar>\r\n            <RollDiv>\r\n                <ContainerProducts>\r\n                    <div>\r\n                        <img src={product?.picture}></img>\r\n                        <h2>{product?.name}</h2>\r\n                    </div>\r\n                    <section>\r\n                        <div>\r\n                            <p>Em estoque:{product?.amount}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>{product?.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>R$: {product?.price}</p>\r\n                        </div>\r\n                    </section>\r\n                </ContainerProducts>\r\n                <ContainerVariants>\r\n                    {variants.map((variant) => {\r\n                        return (\r\n                            <section key={variant._id}>\r\n                                <IconGroup>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={(e) =>\r\n                                            handleEditVariant(variant._id, e)\r\n                                        }\r\n                                    >\r\n                                        <img src={editIcon}></img>\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={(e) =>\r\n                                            handleDeleteVariant(variant._id, e)\r\n                                        }\r\n                                    >\r\n                                        <img src={deleteIcon}></img>\r\n                                    </button>\r\n                                </IconGroup>\r\n                                <img src={variant.picture}></img>\r\n                                <h4>{variant.name}</h4>\r\n                                <h3>R$: {variant.price}</h3>\r\n                            </section>\r\n                        );\r\n                    })}\r\n                </ContainerVariants>\r\n            </RollDiv>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/login/index.tsx",["50","51"],"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/products/styles.ts",[],"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/dashboard/index.tsx",["52","53","54","55","56"],"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/routes/index.tsx",["57"],"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/variants/index.tsx",["58","59","60","61"],"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/variants/styles.ts",[],"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/dashboard/styles.ts",[],"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/services/api.ts",[],"/mnt/c/Users/Pichau/Desktop/ApiProducts/productsio/src/pages/register/index.tsx",["62","63"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport { Container } from \"./styles\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Register: React.FC = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleRegister = async (e: { preventDefault: () => void }) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await api.post(\"/users/register\", {\r\n                name,\r\n                email,\r\n                password,\r\n            });\r\n            if (response.statusText == \"Created\") {\r\n                alert(\"Conta criada com sucesso, basta logar\");\r\n                history.push(\"/\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            return alert(\"Email ja existente\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Cadastro</h1>\r\n            <form onSubmit={handleRegister}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Insira seu nome\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Insira seu email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"password\"\r\n                    placeholder=\"Insira sua senha\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                ></input>\r\n                <button type=\"submit\">Entrar</button>\r\n            </form>\r\n            <Link to=\"/\">Voltar</Link>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n",{"ruleId":"64","severity":1,"message":"65","line":138,"column":8,"nodeType":"66","messageId":"67","endLine":138,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":144,"column":8,"nodeType":"66","messageId":"67","endLine":144,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":229,"column":25,"nodeType":"70","endLine":229,"endColumn":53},{"ruleId":"68","severity":1,"message":"69","line":255,"column":41,"nodeType":"70","endLine":255,"endColumn":61},{"ruleId":"68","severity":1,"message":"69","line":263,"column":41,"nodeType":"70","endLine":263,"endColumn":63},{"ruleId":"68","severity":1,"message":"69","line":266,"column":33,"nodeType":"70","endLine":266,"endColumn":60},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":17,"column":37,"nodeType":"77","messageId":"78","endLine":17,"endColumn":39},{"ruleId":"71","severity":1,"message":"79","line":8,"column":10,"nodeType":"73","messageId":"74","endLine":8,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":102,"column":8,"nodeType":"66","messageId":"67","endLine":102,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":157,"column":37,"nodeType":"70","endLine":157,"endColumn":57},{"ruleId":"68","severity":1,"message":"69","line":165,"column":37,"nodeType":"70","endLine":165,"endColumn":59},{"ruleId":"68","severity":1,"message":"69","line":168,"column":29,"nodeType":"70","endLine":168,"endColumn":56},{"ruleId":"71","severity":1,"message":"80","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":16},{"ruleId":"71","severity":1,"message":"81","line":34,"column":11,"nodeType":"73","messageId":"74","endLine":34,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":77,"column":56,"nodeType":"77","messageId":"78","endLine":77,"endColumn":58},{"ruleId":"64","severity":1,"message":"65","line":92,"column":8,"nodeType":"66","messageId":"67","endLine":92,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":140,"column":29,"nodeType":"70","endLine":140,"endColumn":58},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":22,"column":37,"nodeType":"77","messageId":"78","endLine":22,"endColumn":39},"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'off' is defined but never used.","'Variants' is defined but never used.","'history' is assigned a value but never used."]